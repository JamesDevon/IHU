    import java.lang.StringBuilder;
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        Labels = new javax.swing.JPanel();
        encode_Label = new javax.swing.JLabel();
        decode_Label = new javax.swing.JLabel();
        TextBoxes = new javax.swing.JPanel();
        encode_TextField = new javax.swing.JTextField();
        decode_TextField = new javax.swing.JTextField();
        buttons = new javax.swing.JPanel();
        decode_Button = new javax.swing.JButton();
        encode_Button = new javax.swing.JButton();
        reset_Button = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Decoder");
        setMinimumSize(new java.awt.Dimension(400, 300));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        Labels.setLayout(new java.awt.GridBagLayout());

        encode_Label.setText("Encoded : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        Labels.add(encode_Label, gridBagConstraints);

        decode_Label.setText("Decoded : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        Labels.add(decode_Label, gridBagConstraints);

        getContentPane().add(Labels, new java.awt.GridBagConstraints());

        TextBoxes.setMinimumSize(new java.awt.Dimension(50, 60));
        TextBoxes.setPreferredSize(new java.awt.Dimension(200, 100));
        TextBoxes.setLayout(new java.awt.GridBagLayout());

        encode_TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        encode_TextField.setToolTipText("");
        encode_TextField.setMinimumSize(new java.awt.Dimension(50, 20));
        encode_TextField.setPreferredSize(new java.awt.Dimension(6, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        TextBoxes.add(encode_TextField, gridBagConstraints);

        decode_TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        decode_TextField.setMinimumSize(new java.awt.Dimension(50, 20));
        decode_TextField.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        TextBoxes.add(decode_TextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(TextBoxes, gridBagConstraints);

        buttons.setLayout(new java.awt.GridBagLayout());

        decode_Button.setText("Decode");
        decode_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decode_ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        buttons.add(decode_Button, gridBagConstraints);

        encode_Button.setText("Encode");
        encode_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encode_ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        buttons.add(encode_Button, gridBagConstraints);

        reset_Button.setText("Reset");
        reset_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        buttons.add(reset_Button, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        getContentPane().add(buttons, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
String encoded;
String decoded;
    private void decode_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decode_ButtonActionPerformed
        encoded = encode_TextField.getText();
        StringBuilder str = new StringBuilder(encoded);
        for (int i=0; i<encoded.length(); i++){
            str.setCharAt(i, (char)(str.charAt(i)+1));
        }
        decoded = str.toString();
        decode_TextField.setText(decoded);
    }//GEN-LAST:event_decode_ButtonActionPerformed

    private void encode_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encode_ButtonActionPerformed
        decoded = decode_TextField.getText();
        StringBuilder str = new StringBuilder(decoded);
        for (int i=0; i<decoded.length(); i++){
            str.setCharAt(i, (char)(str.charAt(i)-1));
        }
        encoded = str.toString();
        encode_TextField.setText(encoded);
    }//GEN-LAST:event_encode_ButtonActionPerformed

    private void reset_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_ButtonActionPerformed
        encode_TextField.setText("");
        decode_TextField.setText("");
    }//GEN-LAST:event_reset_ButtonActionPerformed


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Labels;
    private javax.swing.JPanel TextBoxes;
    private javax.swing.JPanel buttons;
    private javax.swing.JButton decode_Button;
    private javax.swing.JLabel decode_Label;
    private javax.swing.JTextField decode_TextField;
    private javax.swing.JButton encode_Button;
    private javax.swing.JLabel encode_Label;
    private javax.swing.JTextField encode_TextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton reset_Button;
    // End of variables declaration//GEN-END:variables
}
